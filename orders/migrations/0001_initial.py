# Generated by Django 5.2 on 2025-04-29 15:34

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0004_remove_orderproduct_order_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when this record was first created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when this record was last updated', verbose_name='Updated At')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, help_text='Sum of all items before adjustments', max_digits=12, verbose_name='Subtotal')),
                ('discount', models.DecimalField(decimal_places=2, default=0, help_text='Absolute discount value (not percentage)', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Discount Amount')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, help_text='Calculated tax for this order', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Tax Amount')),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, help_text='Calculated shipping charges', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Shipping Cost')),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, help_text='Final amount after all adjustments', max_digits=12, verbose_name='Total Amount')),
                ('status', models.CharField(choices=[('draft', 'Draft (Unsubmitted)'), ('pending', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('returned', 'Returned')], default='draft', help_text='Current state in fulfillment workflow', max_length=15, verbose_name='Order Status')),
                ('completed_at', models.DateTimeField(blank=True, help_text='When order reached terminal status', null=True, verbose_name='Completed At')),
                ('user', models.ForeignKey(help_text='The customer who placed this order', on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='products.user', verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Number of units ordered', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('price_at_purchase', models.DecimalField(decimal_places=2, editable=False, help_text='Snapshot of product price when ordered', max_digits=12, verbose_name='Price At Purchase')),
                ('order', models.ForeignKey(help_text='The order containing this product', on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='orders.order', verbose_name='Order')),
                ('product', models.ForeignKey(help_text='The product being ordered', on_delete=django.db.models.deletion.PROTECT, related_name='order_products', to='products.products', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Order Product',
                'verbose_name_plural': 'Order Products',
                'unique_together': {('order', 'product')},
            },
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(help_text='The products included in this order', related_name='orders', through='orders.OrderProduct', to='products.products', verbose_name='Ordered Products'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='orders_orde_status_c6dd84_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user', 'created_at'], name='orders_orde_user_id_37fed6_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['created_at'], name='orders_orde_created_0e92de_idx'),
        ),
    ]
